# mapディレクティブでホスト名に基づいてプロキシ先を決定
map $http_host $proxy_target {
    "api.${DOMAIN}" "http://${BACKEND_CONTAINER_NAME}:${BACKEND_PORT}";
    "${DOMAIN}" "http://${FRONTEND_CONTAINER_NAME}:${FRONTEND_PORT}";
}

# HTTPサーバー設定
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name localhost;

    # CertbotのHTTP-01チャレンジに対応
    location ~ /.well-known/acme-challenge/ {
        root /var/www/certbot; # Certbotの一時ファイルを保存するディレクトリ
        allow all;
    }

    # すべてのHTTPトラフィックをHTTPSにリダイレクト
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPSサーバー設定
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost;

    # Let's Encryptによって提供される証明書と秘密鍵のパス
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

    # セッションの設定(TLSセッションID)
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # 約40000セッション

    # セッションの設定(TLSセッションチケット)
    ssl_session_tickets on;
    ssl_session_ticket_key /etc/nginx/ticket-keys/ticket.key;

    # 現代的な設定
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_moduleが必要) (2年間)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSPステープリング
    ssl_stapling on;
    ssl_stapling_verify on;

    # OCSPレスポンスの信頼チェーンを検証するためのRoot CAおよび中間証明書(省略する)
    # ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN}/chain.pem;

    # リゾルバーのIPアドレスを置き換える(Dockerの内部DNSサーバー)
    resolver 127.0.0.11;

    # リバースプロキシの設定
    location / {
        proxy_pass $proxy_target;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
